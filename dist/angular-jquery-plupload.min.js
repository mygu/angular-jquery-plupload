(function(){angular.module("angular-jquery-plupload",[]).provider("pluploadQueueOption",function(){var c={flash_swf_url:"/bower_components/plupload/js/Moxie.swf",silverlight_xap_url:"/bower_components/plupload/js/Moxie.xap",runtimes:"html5, flash, silverlight, html4",max_file_size:"10mb",filters:[{title:"Image files",extensions:"jpg,jpeg,gif,png"}],views:{list:!0,thumbs:!1,active:"list"}};return{setOptions:function(b){angular.extend(c,b)},$get:function(){return c}}}).provider("pluploadOption",function(){var c=
{flash_swf_url:"/bower_components/plupload/js/Moxie.swf",silverlight_xap_url:"/bower_components/plupload/js/Moxie.xap",runtimes:"html5, flash, silverlight, html4",multi_selection:!1,filters:{max_file_size:"10mb",mime_types:[{title:"Image files",extensions:"jpg,jpeg,gif,png"}]}};return{setOptions:function(b){angular.extend(c,b)},$get:function(){return c}}}).directive("pluploadQueue",["$timeout","pluploadQueueOption",function(c,b){function e(a){return a.charAt(0).toLowerCase()+a.slice(1)}return{scope:{url:"=pluploadQueue",
    options:"=pluploadQueueOptions",callbacks:"=pluploadQueueCallbacks",init:"=pluploadQueueInit"},link:function(a,c,f){a.$watch("init",function(g,f){if(g){a.init=!1;var d=$(c[0]);b.url=a.url;angular.extend(b,a.options);d.pluploadQueue(b);var h=d.pluploadQueue();a.callbacks&&angular.forEach("Init PostInit OptionChanged Refresh StateChanged UploadFile BeforeUpload QueueChanged UploadProgress FilesRemoved FileFiltered FilesAdded FileUploaded ChunkUploaded UploadComplete Error Destroy".split(" "),function(b){var c=
    a.callbacks[e(b)]||angular.noop;h.bind(b,function(){c.apply(null,arguments);a.$$phase||a.$root.$$phase||a.$apply()})})}})}}}]).directive("plupload",["$timeout","pluploadOption",function(c,b){function e(a){return a.charAt(0).toLowerCase()+a.slice(1)}return{scope:{url:"=plupload",options:"=pluploadOptions",callbacks:"=pluploadCallbacks",init:"=pluploadInit"},link:function(a,c,f){a.$watch("init",function(g,f){if(g){a.init=!1;b.url=a.url;b.container=c[0];angular.extend(b,a.options);var d=new plupload.Uploader(b);
    a.callbacks&&angular.forEach("Init PostInit OptionChanged Refresh StateChanged UploadFile BeforeUpload QueueChanged UploadProgress FilesRemoved FileFiltered FilesAdded FileUploaded ChunkUploaded UploadComplete Error Destroy".split(" "),function(b){var c=a.callbacks[e(b)]||angular.noop;d.bind(b,function(){c.apply(null,arguments);a.$$phase||a.$root.$$phase||a.$apply()})});d.init()}})}}}])})();